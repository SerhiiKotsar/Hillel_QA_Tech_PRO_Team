"use strict";
//Ця зміна містить всі дані які в нас зберігаються у файлі data.js
let DB = data.finesData;
//Кнопка "Оплатити"
let buttonSubmit = document.getElementById("payFine");

/**
Вам необхідно реалізувати наступний функціонал.
Зробити валідацію до всіх полів
1. Номер та сума повинні бути однакові як в існуючого штрафу - якщо ні видавати
alert "Номер не співпадає" або "Сума не співпадає"

2. Паспортні дані у форматі - перші дві літери укр алфавіту, та 6 цифр.
Якщо не співпадає то видавати alert "Не вірний паспортний номер"

3. Номер кредитної карки 16 цифр -
якщо не співпадає то видавати alert "Не вірна кредитна картка"

4. cvv 3 цифри - якщо не співпадає то видавати alert "Не вірний cvv".

Якщо валідація проходить успішно, то виконати оплату,
 тобто вам потрібно видалити об'єкт з DB
 */

function payFine() {

    //Запишем всё, что ввёл пользователь с формы в переменные под каждое конкретное поле
    let fineNumber = document.getElementById("fineNumber").value; //номер штрафа
    let passport = document.getElementById("passport").value; //паспортные данные пользователя
    let creditCardNumber = document.getElementById("creditCardNumber").value; //номер кредитной карты
    let cvv = document.getElementById("cvv").value; //номер cvv
    let amount = document.getElementById("amount").value; //сумма

    //Создадим переменные с флагами, которые будут означать валидацию каждого конкретного поля
    let isValidNumber, isValidAmount, isPassport, isCreditCardNumber, isCvv = false;

    //Переменная - регулярное выражение для валидации паспорта (первые две буквы укр.алфавита и 6 цифр)
    const regex = /^[А-ЩЬЮЯҐЄIІЇ]{2}\d{6}$/;

    //Найденный штраф, который мы будем удалять, в случае валидностей всех полей
    let foundFine;

    //1. Валидация номера карты на длину в 16 цифр
    if (creditCardNumber) {
        if (creditCardNumber.length == 16 && (+creditCardNumber)) {
            //Меняем флаг валидности для номера карты
            isCreditCardNumber = true;
        } else {
            alert('Не вірна кредитна картка');
        }
    }

    //2. Валидация cvv на 3 цифры
    if (cvv) {
        if (cvv.length == 3 && (+cvv)) {
            //Меняем флаг валидности для свв
            isCvv = true;
        } else {
            alert('Не вірний cvv');
        }
    }

    //3. Валидация на паспортные данные пользователя
    if (passport) {
        //Если полученное значение проходит проверку на регулярное выражение из переменной regex
        if (regex.test(passport)) {
            //Меняем флаг валидности для паспорта
            isPassport = true;
        } else {
            alert('Не вірний паспортний номер');
        }
    }

    //4. Валидация номера штрафа и его суммы
    if (fineNumber && amount) {
        //Ищем штраф по его номеру
        foundFine = DB.filter(штраф => штраф.номер === fineNumber);
        //Если находим штраф, то сделаем проверку на то, соответствует ли его сумма тому, что ввёл пользователь
        if (foundFine.length > 0) {
            //Если введённая сумма совпадёт, то меняем флаги валидности для суммы
            if (foundFine[0].сума === (+amount)) {
                //Меняем флаги валидности для суммы
                isValidAmount = true;
            } else {
                alert('Сума не співпадає');
            }
        }
        //Проверка на то, что введенный пользователем номер штрафа находится у нас в массиве DB
        if (DB.some(штраф => Object.values(штраф).includes(fineNumber))) {
            //Меняем флаг валидности для номера штрафа
            isValidNumber = true;
        } else {
            alert('Номер не співпадає');
        }
    }

    //5. Если все поля прошли валидацию, то выполнить оплату (т.е. удалить объект из DB)
    if (isValidNumber && isValidAmount && isPassport && isCreditCardNumber && isCvv) {
        //Найдем индекс объекта в массиве DB по его номеру, мы получим индекс первого элемента, который удовлетворит условия или -1 (если не будет найден элемент удовлетворяющий условия)
        let indexToRemove = DB.findIndex(штраф => штраф.номер === foundFine[0].номер);

        //Удаляем объект с указанным индексом, если был найден индекс для удаления из массива DB (не вернулся -1)
        if (indexToRemove !== -1) {
            //Используем splice, чтоб удалить один элемент из массива DB по указанному индексу indexToRemove. Метод вернёт массив, который содержит удаленные элементы. Но мы вытягиваем первый и единственный элемент этого массива с помощью [0] и присваиваем его переменной newArray
            let newArray = DB.splice(indexToRemove, 1)[0];
            //Возвращаем удалённый объект, если удаление произошло, то этот объект тепер является результатом вызова функции. По итогу пользователь видит лишь те штрафы, которые остались неоплачены.
            alert('Операция успешно выполнена');
            return newArray;
        }
    }

}

//Клик на кнопку "Оплатити" вызывает действие функции payFine
buttonSubmit.addEventListener('click', payFine);